Процедура ОбработкаПроведения(Отказ, Режим)
	Для Каждого ТекСтрока Из СписокНоменклатуры Цикл
		// Попробовать списать из указанной партии
		ОсталосьСписать = СписатьИзПартии(Партия, ТекСтрока.Номенклатура, ТекСтрока.Количество, Дата);
		Если ОсталосьСписать = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Списать из других партий
		Выборка = ПолучитьСписокПартийСогласноУчетнойПолитике(ТекСтрока.Номенклатура, УчетнаяПолитика);
		Пока Выборка.Следующий() Цикл
			ОсталосьСписать = СписатьИзПартии(Выборка.Партия, ТекСтрока.Номенклатура, ОсталосьСписать, Дата);
			Если ОсталосьСписать = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция СписатьИзПартии(Партия, Номенклатура, Количество, Дата) 	
	// Получить остатки этой партии и этой номенклатуры
	Запрос = Новый Запрос;
	Запрос.Текст =
        "ВЫБРАТЬ
        |	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
        |	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток,
        |	ОстаткиНоменклатурыОстатки.НомерСтрокиПартии КАК НомерСтрокиПартии
        |ИЗ
        |	РегистрНакопления.ОстаткиНоменклатуры.Остатки КАК ОстаткиНоменклатурыОстатки
        |ГДЕ
        |	ОстаткиНоменклатурыОстатки.Партия = &Партия
        |	И ОстаткиНоменклатурыОстатки.Номенклатура = &Номенклатура
        |	И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0
        |
        |УПОРЯДОЧИТЬ ПО
        |	ОстаткиНоменклатурыОстатки.НомерСтрокиПартии";
	Запрос.УстановитьПараметр("Партия", Партия);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// Списание
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Пока Количество <> 0 И Выборка.Следующий() Цикл		
		Движение = Движения.ОстаткиНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Номенклатура;
		Движение.Партия = Партия;
		Движение.НомерСтрокиПартии = Выборка.НомерСтрокиПартии;
		Движение.Количество = ?(Выборка.КоличествоОстаток >= Количество,
		    Количество, Выборка.КоличествоОстаток);
		Движение.Сумма = Выборка.СуммаОстаток / Выборка.КоличествоОстаток * Движение.Количество;
		
		Количество = Количество - Движение.Количество;		
	КонецЦикла;
	
	Возврат Количество;
КонецФункции

                                                                                
Функция ПолучитьСписокПартийСогласноУчетнойПолитике(Номенклатура, УчетнаяПолитика)
	// Получить текстовое представление параметра сортировки запроса
	СортировкаСогласноУчетнойПолитике = "";
	Если УчетнаяПолитика = Перечисления.УчетнаяПолитика.ЛИФО Тогда
		СортировкаСогласноУчетнойПолитике = "УБЫВ";
	ИначеЕсли УчетнаяПолитика = Перечисления.УчетнаяПолитика.ФИФО Тогда
		СортировкаСогласноУчетнойПолитике = "ВОЗР";
	Иначе
		ВызватьИсключение("Неизвестное значение учетной политики.");
	КонецЕсли;
	
	// Получить список партий
	Запрос = Новый Запрос;
	Запрос.Текст =
	    "ВЫБРАТЬ
	    |	ОстаткиНоменклатурыОстатки.Партия КАК Партия
	    |ИЗ
	    |	РегистрНакопления.ОстаткиНоменклатуры.Остатки КАК ОстаткиНоменклатурыОстатки
	    |ГДЕ
	    |	ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0
	    |	И ОстаткиНоменклатурыОстатки.Номенклатура = &Номенклатура
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	ОстаткиНоменклатурыОстатки.Партия.Дата " + СортировкаСогласноУчетнойПолитике;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат Выборка;
КонецФункции


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		// Заполнение шапки
		Партия = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.УчетнаяПолитика = РегистрыСведений.МетодСписания.ПолучитьПоследнее(Дата).МетодСписания;
КонецПроцедуры


 




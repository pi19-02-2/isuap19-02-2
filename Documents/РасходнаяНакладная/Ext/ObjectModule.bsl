Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ЗаполнитьРегистрНакопленияОстаткиНоменклатуры(Отказ);
КонецПроцедуры


Процедура ЗаполнитьРегистрНакопленияОстаткиНоменклатуры(Отказ)
	АктуальнаяУчетнаяПолитика = ПолучитьАктуальнуюУчетнуюПолитику();
	Если ЭтотОбъект.УчетнаяПолитика <> АктуальнаяУчетнаяПолитика Тогда
		Отказ = Истина;
		Сообщить("Учетная политика, указанная в шапке документа, не соответствует актуальной учетной политике.");		
		Возврат;		
	КонецЕсли;	
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;                 
	Движения.ОстаткиНоменклатуры.Записать();

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК НужноСписать
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
	|ГДЕ
	|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &ТекущийДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НужноСписать КАК НужноСписать,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК МожноСписать,
	|	ОстаткиНоменклатурыОстатки.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатурыОстатки.Партия = &Партия
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПриоритетУказаннойПартии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				&Момент,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						Товары.Номенклатура
	|					ИЗ
	|						Товары КАК Товары)) КАК ОстаткиНоменклатурыОстатки
	|			ПО Товары.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетУказаннойПартии,
	|	Партия " + ПолучитьТипСортировкиСогласноУчетнойПолитике(АктуальнаяУчетнаяПолитика) + ",
	|	Цена
	|ИТОГИ
	|	МАКСИМУМ(НужноСписать),
	|	СУММА(МожноСписать)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("Момент", МоментВремени());
	Запрос.УстановитьПараметр("ТекущийДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Партия", Партия);

	ГрупповаяВыборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	Пока ГрупповаяВыборка.Следующий() Цикл
		// Проверить остатки номенклатуры
		Если
			НЕ ГрупповаяВыборка.Номенклатура.Услуга
			И ГрупповаяВыборка.НужноСписать > ГрупповаяВыборка.МожноСписать
		Тогда
			Отказ = Истина;
		
			ТекстСообщения = "Не хватает " + Строка(ГрупповаяВыборка.НужноСписать - ГрупповаяВыборка.МожноСписать) 
				+ " единиц номенклатуры " + ГрупповаяВыборка.Номенклатура + ".";
			Сообщить(ТекстСообщения);			          
			
			Продолжить;
		КонецЕсли;
		
		// Списать номенклатуру
		Выборка = ГрупповаяВыборка.Выбрать();		
		ОсталосьСписать = ГрупповаяВыборка.НужноСписать;	           	
		Пока ОсталосьСписать > 0 И Выборка.Следующий() Цикл			
			ПолучилосьСписать = Мин(ОсталосьСписать, Выборка.МожноСписать);
			СуммаСписания = Выборка.Цена * ПолучилосьСписать;		
		 	
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Партия = Выборка.Партия;
			Движение.Цена = Выборка.Цена;
			Движение.Количество = ПолучилосьСписать;
			Движение.Сумма = СуммаСписания;
			
			ОсталосьСписать = ОсталосьСписать - ПолучилосьСписать;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры	

Функция ПолучитьТипСортировкиСогласноУчетнойПолитике(УчетнаяПолитика)
	СортировкаСогласноУчетнойПолитике = "";
	Если УчетнаяПолитика = Перечисления.УчетнаяПолитика.ЛИФО Тогда
		СортировкаСогласноУчетнойПолитике = "УБЫВ";
	ИначеЕсли УчетнаяПолитика = Перечисления.УчетнаяПолитика.ФИФО Тогда
		СортировкаСогласноУчетнойПолитике = "ВОЗР";
	Иначе
		ВызватьИсключение("Неизвестное значение учетной политики.");
	КонецЕсли;
КонецФункции	



Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда 		
		Партия = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	
	ОбновитьУчетнуюПолитикуДокумента();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ОбновитьУчетнуюПолитикуДокумента();
КонецПроцедуры

Процедура ОбновитьУчетнуюПолитикуДокумента()
	ЭтотОбъект.УчетнаяПолитика = ПолучитьАктуальнуюУчетнуюПолитику();
КонецПроцедуры

Функция ПолучитьАктуальнуюУчетнуюПолитику()	
	Возврат РегистрыСведений.МетодСписания.ПолучитьПоследнее(ТекущаяДата()).МетодСписания;
КонецФункции
 


    

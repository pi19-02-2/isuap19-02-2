Процедура ОбработкаПроведения(Отказ, Режим)
	АктуальнаяУчетнаяПолитика = ПолучитьАктуальнуюУчетнуюПолитику();
	Если ЭтотОбъект.УчетнаяПолитика <> АктуальнаяУчетнаяПолитика Тогда
		Отказ = Истина;
		Сообщить("Учетная политика, указанная в шапке документа, не соответствует актуальной учетной политике.");		
		Возврат;		
	КонецЕсли;	
	
	Для Каждого ТекСтрока Из СписокНоменклатуры Цикл
		Список1 = ПолучитьСписокНоменклатур(Партия, ТекСтрока.Номенклатура);
		ОсталосьСписать = Списать(Список1, ТекСтрока.Количество);
		
		Список2 = ПолучитьСписокНоменклатурСогласноУчетнойПолитике(Партия, ТекСтрока.Номенклатура);
		ОсталосьСписать = Списать(Список2, ОсталосьСписать);
	КонецЦикла;
	
/////////////////////////////////////////////////// НЕВЕРНЫЙ ПОДСЧЁТ СЕБЕСТОИМОСТИ

	Движения.ПродажиНоменклатуры.Записывать = Истина;
	
	Запрос = Новый Запрос;
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК СуммаПродажи
	|ПОМЕСТИТЬ ТЧСписокНоменклатуры
	|ИЗ
	|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
	|ГДЕ
	|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ТЧСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТЧСписокНоменклатуры.Количество КАК Количество,
	|	ТЧСписокНоменклатуры.СуммаПродажи КАК СуммаПродажи,
	|	ТЧСписокНоменклатуры.Номенклатура.Представление КАК НоменклатураПредставление
	|ИЗ
	|	ТЧСписокНоменклатуры КАК ТЧСписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				&МоментВремени,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						ТЧСписокНоменклатуры.Номенклатура
	|					ИЗ
	|						ТЧСписокНоменклатуры КАК ТЧСписокНоменклатуры)) КАК ОстаткиНоменклатурыОстатки
	|		ПО ТЧСписокНоменклатуры.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|
	|ИТОГИ
	|	СУММА(КоличествоОстаток),
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(СуммаПродажи)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка",				Ссылка);
	Запрос.УстановитьПараметр("МоментВремени",			МоментВремени());

	Результат = Запрос.Выполнить();
	ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ИтогоСебестоимость = 0;
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток;

			Если Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
				Себестоимость = ВыборкаДетальныеЗаписи.СуммаОстаток;
			Иначе
				Себестоимость = Количество * ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток;
			КонецЕсли;
			ИтогоСебестоимость = ИтогоСебестоимость + Себестоимость;		
		КонецЦикла;
		
		Движение = Движения.ПродажиНоменклатуры.Добавить();
		Движение.Период = Дата;
		Движение.Количество = ВыборкаНоменклатура.Количество;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.СуммаПродажи = ВыборкаНоменклатура.СуммаПродажи;
		Движение.Себестоимость = ИтогоСебестоимость;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСписокНоменклатур(ВключаемаяПартия, Номенклатура)
	Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
			|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
			|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
			|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток,
			|	ОстаткиНоменклатурыОстатки.НомерСтрокиПартии КАК НомерСтрокиПартии
			|ИЗ
			|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
			|			,
			|			Партия = &Партия
			|				И Номенклатура = &Номенклатура) КАК ОстаткиНоменклатурыОстатки
			|ГДЕ
			|	ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтрокиПартии";
	Запрос.УстановитьПараметр("Партия", ВключаемаяПартия);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();	
	
	Возврат Выборка;
КонецФункции


Функция ПолучитьСписокНоменклатурСогласноУчетнойПолитике(ИсключаемаяПартия, Номенклатура)
	// Получить текстовое представление параметра сортировки запроса
	СортировкаСогласноУчетнойПолитике = "";
	Если УчетнаяПолитика = Перечисления.УчетнаяПолитика.ЛИФО Тогда
		СортировкаСогласноУчетнойПолитике = "УБЫВ";
	ИначеЕсли УчетнаяПолитика = Перечисления.УчетнаяПолитика.ФИФО Тогда
		СортировкаСогласноУчетнойПолитике = "ВОЗР";
	Иначе
		ВызватьИсключение("Неизвестное значение учетной политики.");
	КонецЕсли;
	
	// Получить данные
	Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|  	ОстаткиНоменклатурыОстатки.Партия КАК Партия,        	
			|	ОстаткиНоменклатурыОстатки.Партия.Дата КАК ПартияДата,
			|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
			|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
			|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток,
			|	ОстаткиНоменклатурыОстатки.НомерСтрокиПартии КАК НомерСтрокиПартии 
			|ИЗ
			|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
			|		,
			|		Партия <> &Партия
			|			И Номенклатура = &Номенклатура) КАК ОстаткиНоменклатурыОстатки
			|ГДЕ 
			|	ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПартияДата " + СортировкаСогласноУчетнойПолитике + ",
			|	НомерСтрокиПартии";
	Запрос.УстановитьПараметр("Партия", ИсключаемаяПартия);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();	
	
	Возврат Выборка;
КонецФункции


Функция Списать(Выборка, Количество)
	ОсталосьСписать = Количество;
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Пока ОсталосьСписать <> 0 И Выборка.Следующий() Цикл		
		Движение = Движения.ОстаткиНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Партия = Выборка.Партия;
		Движение.НомерСтрокиПартии = Выборка.НомерСтрокиПартии;
		Движение.Количество = Мин(Выборка.КоличествоОстаток, ОсталосьСписать);
		Движение.Сумма = Выборка.СуммаОстаток / Выборка.КоличествоОстаток * Движение.Количество;
		
		ОсталосьСписать = ОсталосьСписать - Движение.Количество;
	КонецЦикла;
	Возврат ОсталосьСписать;
КонецФункции



Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда 		
		Партия = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	
	ОбновитьУчетнуюПолитикуДокумента();
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	ОбновитьУчетнуюПолитикуДокумента();
КонецПроцедуры

Процедура ОбновитьУчетнуюПолитикуДокумента()
	ЭтотОбъект.УчетнаяПолитика = ПолучитьАктуальнуюУчетнуюПолитику();
КонецПроцедуры


Функция ПолучитьАктуальнуюУчетнуюПолитику()
	Возврат РегистрыСведений.МетодСписания.ПолучитьПоследнее(Дата).МетодСписания;
КонецФункции
